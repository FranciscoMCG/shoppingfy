{"version":3,"sources":["slices/items.ts","slices/basket.ts","slices/index.ts","styles/colors.ts","views/ShoppingBasket/ShoppingBasket.tsx","views/ShoppingBasket/ShoppingList/ShoppingItem/ShoppingItem.tsx","views/ShoppingBasket/ShoppingList/ShoppingList.tsx","views/ShoppingBasket/ShoppingTotal/ShoppingTotal.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["itemsSlice","createSlice","name","initialState","loading","hasErrors","items","reducers","getItems","state","getItemsSuccess","payload","getItemsFailure","actions","itemsSelector","basketSlice","isTouched","basket","qtyChange","action","itemId","value","price","total","qty","reset","resetAll","basketSelector","rootReducer","combineReducers","itemsReducer","basketReducer","colors","white","black","greyLight","greyDark","blueLight","orange","ShoppingBasketContainer","styled","div","ShoppingBasket","ShoppingItemWrapper","Name","Input","input","SubTotal","span","Delete","button","ShoppingItem","item","dispatch","useDispatch","useSelector","subTotal","parseFloat","SKU","type","id","min","max","placeholder","onChange","e","parseInt","target","currency","toFixed","onClick","ShoppingListContainer","ShoppingList","useEffect","a","fetch","response","json","data","map","i","ShoppingTotalContainer","Total","Clear","Button","ShoppingTotal","Number","Object","values","reduce","sum","n","isEmpty","disabled","window","alert","AppContainer","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.51efba1a.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nimport { RootState } from './';\nimport { AppDispatch } from '../';\n\ninterface Category {\n  category: string;\n}\n\ninterface Item {\n  name: string;\n  SKU: number;\n  price: number;\n  currency: string;\n  metadata: Category;\n}\n\ninterface SliceState {\n  items?: Item[];\n  loading: boolean;\n  hasErrors: boolean;\n}\n\nconst initialState: SliceState = {\n  loading: false,\n  hasErrors: false,\n  items: [],\n};\n\nconst itemsSlice = createSlice({\n  name: 'items',\n  initialState,\n  reducers: {\n    getItems: state => {\n      state.loading = true;\n    },\n    getItemsSuccess: (state, { payload }) => {\n      state.items = payload;\n      state.loading = false;\n      state.hasErrors = false;\n    },\n    getItemsFailure: state => {\n      state.loading = false;\n      state.hasErrors = true;\n    },\n  },\n});\n\nexport const {\n  getItems,\n  getItemsSuccess,\n  getItemsFailure,\n} = itemsSlice.actions;\n\nexport const itemsSelector = (state: RootState) => state.items;\n\nexport const fetchItems = () => {\n  return async (dispatch: AppDispatch) => {\n    dispatch(getItems());\n\n    try {\n      const response = await fetch('data.json');\n      const data = await response.json();\n\n      dispatch(getItemsSuccess(data));\n    } catch (error) {\n      dispatch(getItemsFailure());\n    }\n  };\n};\n\nexport default itemsSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nimport { RootState } from './';\n\ninterface SliceState {\n  isTouched: boolean;\n  basket: {\n    [key: string]: any;\n    qty?: number;\n    total?: 0;\n  };\n}\n\nconst initialState: SliceState = {\n  isTouched: false,\n  basket: {},\n};\n\nconst basketSlice = createSlice({\n  name: 'basket',\n  initialState,\n  reducers: {\n    qtyChange: (state, action) => {\n      const { itemId, value, price } = action.payload;\n      state.isTouched = true;\n      state.basket[itemId] = {\n        total: value * price,\n        qty: value,\n      };\n    },\n    reset: (state, action) => {\n      const { itemId } = action.payload;\n      state.isTouched = true;\n      state.basket[itemId] = {\n        total: 0,\n        qty: 0,\n      };\n    },\n    resetAll: state => {\n      state.isTouched = true;\n      state.basket = {};\n    },\n  },\n});\n\nexport const { qtyChange, reset, resetAll } = basketSlice.actions;\n\nexport const basketSelector = (state: RootState) => state.basket;\n\nexport default basketSlice.reducer;\n","import { combineReducers } from 'redux';\n\nimport itemsReducer from './items';\nimport basketReducer from './basket';\n\nconst rootReducer = combineReducers({\n  items: itemsReducer,\n  basket: basketReducer,\n});\n\nexport default rootReducer;\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","const colors = {\n  white: '#FFF',\n  black: '#000',\n  greyLight: '#D3D3D3',\n  greyDark: '#A9A9A9',\n  blueLight: '#46B7FD',\n  orange: '#FFA500',\n};\n\nexport default colors;\n","import styled from 'styled-components';\n\nimport colors from 'styles/colors';\nimport { ShoppingList } from './';\nimport { ShoppingTotal } from './';\n\nconst ShoppingBasketContainer = styled.div`\n  border: 2px solid ${colors.greyLight};\n  max-width: 30rem;\n  width: 70%;\n  padding: 2rem 1.2rem;\n`;\nconst ShoppingBasket = () => {\n  return (\n    <ShoppingBasketContainer>\n      <ShoppingList />\n      <ShoppingTotal />\n    </ShoppingBasketContainer>\n  );\n};\n\nexport default ShoppingBasket;\n","import styled from 'styled-components';\nimport { ChangeEvent } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport colors from 'styles/colors';\nimport { basketSelector, qtyChange, reset } from 'slices/basket';\n\nconst { greyLight } = colors;\n\nconst ShoppingItemWrapper = styled.div`\n  display: flex;\n  width: 100%;\n  border-bottom: 1px dashed ${greyLight};\n  padding: 1rem 0rem;\n`;\n\nconst Name = styled.div`\n  width: 40%;\n`;\nconst Input = styled.input`\n  width: 25%;\n  border: 1px solid ${greyLight};\n`;\n\nconst SubTotal = styled.span`\n  width: 30%;\n  font-weight: 800;\n  color: ${colors.orange};\n  text-align: right;\n`;\n\nconst Delete = styled.button`\n  width: 5%;\n  color: ${greyLight};\n  font-weight: 600;\n  text-align: center;\n  border: none;\n  background-color: transparent;\n  cursor: pointer;\n`;\n\nconst ShoppingItem = ({ item }: any) => {\n  const dispatch = useDispatch();\n\n  const { basket } = useSelector(basketSelector);\n\n  const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\n    dispatch(\n      qtyChange({\n        itemId: item.SKU,\n        value: parseInt(e.target.value),\n        price: item.price,\n      }),\n    );\n  };\n\n  const handleClick = () => {\n    dispatch(reset({ itemId: item.SKU }));\n  };\n\n  const subTotal = parseFloat(basket[item.SKU]?.total) || 0;\n\n  return (\n    <ShoppingItemWrapper>\n      <Name>{item.name}</Name>\n      <Input\n        type='number'\n        id='qty'\n        name='qty'\n        min='0'\n        max='3'\n        placeholder='0'\n        onChange={handleChange}\n        value={basket[item.SKU]?.qty || 0}\n      />\n      <SubTotal>\n        {item.currency}\n        {subTotal.toFixed(2)}\n      </SubTotal>\n      <Delete onClick={handleClick}>X</Delete>\n    </ShoppingItemWrapper>\n  );\n};\n\nexport default ShoppingItem;\n","import { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport ShoppingItem from './ShoppingItem/ShoppingItem';\nimport { itemsSelector, fetchItems } from 'slices/items';\n\nconst ShoppingListContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin-bottom: 1.2rem;\n`;\nconst ShoppingList = () => {\n  const dispatch = useDispatch();\n\n  const { items, loading, hasErrors } = useSelector(itemsSelector);\n\n  useEffect(() => {\n    dispatch(fetchItems());\n  }, [dispatch]);\n\n  if (loading) return <p>loading...</p>;\n\n  if (hasErrors) return <p>Something went wrong...</p>;\n\n  return (\n    <ShoppingListContainer>\n      {items?.map((item, i: number) => (\n        <ShoppingItem key={i} item={item} />\n      ))}\n    </ShoppingListContainer>\n  );\n};\n\nexport default ShoppingList;\n","import styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { basketSelector, resetAll } from 'slices/basket';\nimport colors from 'styles/colors';\n\nconst { white, blueLight, greyDark, greyLight } = colors;\n\nconst ShoppingTotalContainer = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n`;\n\nconst Total = styled.span`\n  width: 50%;\n  font-weight: 800;\n  font-size: 1rem;\n`;\n\nconst Clear = styled.button`\n  width: 20%;\n  color: ${greyDark};\n  text-align: center;\n  cursor: pointer;\n  border: none;\n  font-weight: 800;\n  font-size: 1rem;\n  background-color: transparent;\n`;\n\nconst Button = styled.button`\n  width: 30%;\n  color: ${white};\n  font-weight: 800;\n  font-size: 1rem;\n  padding: 0.7rem;\n  border: 1px solid ${greyLight};\n  background-color: ${blueLight};\n  cursor: pointer;\n`;\n\nconst ShoppingTotal = () => {\n  const dispatch = useDispatch();\n  const { basket, isTouched } = useSelector(basketSelector);\n\n  const total = Number(\n    Object.values(basket)\n      .reduce((sum: number, n) => sum + n.total, 0)\n      .toFixed(2),\n  );\n\n  const handleClearClick = () => dispatch(resetAll());\n  const handleCheckOutClick = () => window.alert(total);\n\n  const isEmpty = total === 0;\n\n  return (\n    <ShoppingTotalContainer>\n      {isEmpty && isTouched && <i>There are no items in the basket</i>}\n      <Total>£{total}</Total>\n      <Clear onClick={handleClearClick}>Clear</Clear>\n      <Button disabled={isEmpty} onClick={handleCheckOutClick}>\n        Check Out &gt;\n      </Button>\n    </ShoppingTotalContainer>\n  );\n};\n\nexport default ShoppingTotal;\n","import styled from 'styled-components';\n\nimport { ShoppingBasket } from './views/ShoppingBasket';\n\nconst AppContainer = styled.div`\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst App = () => {\n  return (\n    <AppContainer>\n      <ShoppingBasket />\n    </AppContainer>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { Provider } from 'react-redux';\n\nimport rootReducer from './slices';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = configureStore({ reducer: rootReducer });\n\nexport type AppDispatch = typeof store.dispatch;\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}